local YODO1_MAS = require "yodo1-mas.yodo1_mas"

function init(self)
    msg.post(".", "acquire_input_focus")
    msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })

    if (yodo1_mas_private) then
        YODO1_MAS.setAdBuildConfig({
            enableUserPrivacyDialog = true
        })
        YODO1_MAS.setBannerListener(function()
            print("banner opened")
        end, function(event, error)
            print("banner error")
            pprint(error)
        end, function()
            print("banner closed")
        end)

        YODO1_MAS.setInterstitialListener(function()
            print("Interstitial opened")
        end, function(event, error)
            print("Interstitial error")
            pprint(error)
        end, function()
            print("Interstitial closed")
        end)

        YODO1_MAS.setRewardListener(function()
            print("Rewarded opened")
        end, function(event)
            print("Rewarded earned")
        end, function(event, error)
            print("Rewarded error")
            pprint(error)
        end, function()
            print("Rewarded closed")
        end)

        YODO1_MAS.init("mYImAmZj2D", function()
            print("init success")
        end, function(error)
            print("init error:" .. error.message)
        end)

        timer.delay(5, false, function()
            YODO1_MAS.showBannerAd()
        end)

        local interstitial
        interstitial = function()
            if (YODO1_MAS.isInterstitialAdLoaded()) then
                YODO1_MAS.showInterstitialAd()
            else
                timer.delay(2, false, interstitial)
            end
        end
        timer.delay(2, false, interstitial)

        local rewarded
        rewarded = function()
            if (YODO1_MAS.isRewardedAdLoaded()) then
                YODO1_MAS.showRewardedAd()
            else
                timer.delay(3, false, rewarded)
            end
        end
        timer.delay(3, false, rewarded)
    end
end

function on_input(self, action_id, action)

end